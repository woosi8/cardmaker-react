{"version":3,"sources":["components/card/card.module.css","components/card_add_form/card_add_form.module.css","components/card_edit_form/card_edit_form.module.css","components/login/login.module.css","components/image_file_input/image_file_input.module.css","components/header/header.module.css","components/preview/preview.module.css","components/footer/footer.module.css","components/editor/editor.module.css","components/maker/maker.module.css","app.module.css","components/button/button.module.css","index.module.css","components/footer/footer.jsx","components/header/header.jsx","components/login/login.jsx","components/button/button.jsx","components/card_add_form/card_add_form.jsx","components/card_edit_form/card_edit_form.jsx","components/editor/editor.jsx","components/card/card.jsx","components/preview/preview.jsx","components/maker/maker.jsx","app.jsx","service/firebase.js","service/auth_service.js","service/image_uploader.js","components/image_file_input/image_file_input.jsx","service/card_repository.js","index.js"],"names":["module","exports","Footer","className","styles","footer","title","Header","onLogout","style","header","logout","onClick","logo","src","process","alt","Login","authService","history","useHistory","goToMaker","userId","push","pathname","state","id","onLogin","event","login","currentTarget","textContent","then","data","user","uid","useEffect","onAuthChange","list","item","button","Button","name","CardAddForm","FileInput","onAdd","formRef","useRef","nameRef","companyRef","themeRef","titleRef","emailRef","messageRef","useState","fileName","fileURL","file","setFile","ref","form","input","type","placeholder","select","textarea","fileInput","onFileChange","url","preventDefault","card","Date","now","current","value","company","theme","email","message","reset","CardEditForm","updateCard","deleteCard","onChange","console","log","Editor","cards","addCard","editor","Object","keys","map","key","getStyles","dark","light","colorful","Error","Card","avatar","info","Preview","preview","Maker","cardRepository","historyState","location","setCards","setUserId","stopSync","syncCards","CreateOrupdateCard","updated","saveCard","maker","container","removeCard","App","app","exact","path","firebaseConfig","apiKey","authDomain","databaseURL","REACT_APP_FIREBASE_DB_URL","projectId","fireBaseApp","firebase","initializeApp","AuthService","providerName","authProvider","auth","firebaseApp","signInWithPopup","signOut","onUserChanged","onAuthStateChanged","ImageUploader","a","FormData","append","fetch","method","body","result","json","ImageFileInput","imageUploader","loading","setLoading","inputRef","upload","target","files","uploaded","original_filename","accept","pink","grey","click","CardRepository","onUpdate","database","on","snapshot","val","off","set","remove","ReactDOM","render","StrictMode","props","document","getElementById"],"mappings":"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","file":"static/js/main.c3e6183d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerWheat\":\"wheat\",\"makerColorful\":\"linear-gradient(166deg, rgba(237, 193, 211, 1) 0%,rgba(212, 149, 161, 1) 60%, rgba(162, 63, 63, 1) 100%, rgba(127, 188, 242, 1) 100%)\",\"makerBlack\":\"black\",\"makerWhite\":\"white\",\"makerShadow\":\"rgba(217, 217, 217, 1)\",\"from\":\"'../../common/colors.css'\",\"card\":\"card_card__1GMTm\",\"dark\":\"card_dark__3xzQ5\",\"light\":\"card_light__1W1wZ\",\"colorful\":\"card_colorful__9Ew1O\",\"avatar\":\"card_avatar__sePSk\",\"info\":\"card_info__3q5d3\",\"name\":\"card_name__2ml5N\",\"company\":\"card_company__2EZef\",\"title\":\"card_title__6mQa-\",\"email\":\"card_email__3WvV1\",\"message\":\"card_message__15NcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerBlack\":\"black\",\"makerWhite\":\"white\",\"form\":\"card_add_form_form__35yNP\",\"input\":\"card_add_form_input__1COx5\",\"textarea\":\"card_add_form_textarea__2g4Z1\",\"select\":\"card_add_form_select__3R779\",\"button\":\"card_add_form_button__JOCb4\",\"fileInput\":\"card_add_form_fileInput__1ZYuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerBlack\":\"black\",\"makerWhite\":\"white\",\"form\":\"card_edit_form_form__2C8rk\",\"input\":\"card_edit_form_input__26leO\",\"textarea\":\"card_edit_form_textarea__mGYiF\",\"select\":\"card_edit_form_select__1PUXI\",\"button\":\"card_edit_form_button__11WN6\",\"fileInput\":\"card_edit_form_fileInput__2Re5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"makerLightPink\":\"#ffeae8\",\"makerWhite\":\"white\",\"login\":\"login_login__1o9Pf\",\"list\":\"login_list__uzB3B\",\"item\":\"login_item__3bzXk\",\"button\":\"login_button__Z762E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerLightGrey\":\"#e8e7e6\",\"makerGrey\":\"#626262\",\"makerPink\":\"#FFC0CB\",\"container\":\"image_file_input_container__31iwX\",\"input\":\"image_file_input_input__3QbTt\",\"button\":\"image_file_input_button__1t80z\",\"grey\":\"image_file_input_grey__zhweO\",\"pink\":\"image_file_input_pink__H0hpZ\",\"loading\":\"image_file_input_loading__C89lk\",\"spin\":\"image_file_input_spin__3X4La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"makerBlack\":\"black\",\"makerWhite\":\"white\",\"header\":\"header_header__4txbQ\",\"logo\":\"header_logo__1QtGk\",\"title\":\"header_title__1MQfW\",\"logout\":\"header_logout__2ubf_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGreen\":\"#385461\",\"preview\":\"preview_preview__3S_AF\",\"title\":\"preview_title__1lIN8\",\"cards\":\"preview_cards__3rFpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerWhite\":\"white\",\"makerGreen\":\"#385461\",\"footer\":\"footer_footer__1o0r0\",\"title\":\"footer_title__1We8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerLightGrey\":\"#e8e7e6\",\"makerGreen\":\"#385461\",\"editor\":\"editor_editor__SZrpb\",\"title\":\"editor_title__3xNKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mediaQuery\":\"62rem\",\"makerWhite\":\"white\",\"maker\":\"maker_maker__1AIl3\",\"container\":\"maker_container__3LMTn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerGrey\":\"#626262\",\"app\":\"app_app__3mqhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerWhite\":\"white\",\"makerGreen\":\"#385461\",\"button\":\"button_button__1CJT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerBlack\":\"black\"};","import React from \"react\";\r\nimport styles from \"./footer.module.css\";\r\n\r\nconst Footer = () => (\r\n\t<footer className={styles.footer}>\r\n\t\t<p className={styles.title}>Code your dream</p>\r\n\t</footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport style from \"./header.module.css\";\r\n\r\nconst Header = (\r\n\t{ onLogout } // props에 login이 되었다면 logout 콜백할수를 받아온다\r\n) => (\r\n\t<header className={style.header}>\r\n\t\t{onLogout && (\r\n\t\t\t<button className={style.logout} onClick={onLogout}>\r\n\t\t\t\tLogout\r\n\t\t\t</button>\r\n\t\t)}\r\n\t\t<img\r\n\t\t\tclassName={style.logo}\r\n\t\t\tsrc={process.env.PUBLIC_URL + \"/images/logo.png\"}\r\n\t\t\talt=\"logo\"\r\n\t\t/>\r\n\r\n\t\t<h1 className={style.title}>Business Card Maker</h1>\r\n\t</header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../footer/footer\";\r\nimport Header from \"../header/header\";\r\nimport styles from \"./login.module.css\";\r\n\r\nconst Login = ({ authService }) => {\r\n\tconst history = useHistory();\r\n\tconst goToMaker = (userId) => {\r\n\t\t// history.push(\"/.maker\");\r\n\t\t//사용자의 정보도 같이 넘어가야한다 (uid)\r\n\t\thistory.push({\r\n\t\t\t//추가적인 정보들을 전달하고싶을때는 오브젝트 이용\r\n\t\t\tpathname: \"/maker\",\r\n\t\t\tstate: { id: userId },\r\n\t\t});\r\n\t};\r\n\r\n\tconst onLogin = (event) => {\r\n\t\tauthService //\r\n\t\t\t.login(event.currentTarget.textContent) // authService의 provier를 전달해야한다\r\n\t\t\t.then((data) => goToMaker(data.user.uid));\r\n\t};\r\n\r\n\t// 접속할때마다 로그인 되지 않고 로그인을 기억하고 있어 접속시 로그인 화면으로 바로 넘어가게 해주기\r\n\tuseEffect(() => {\r\n\t\t// onAuthChange : authService에 변화가 있다면 (내장 함수)\r\n\t\tauthService.onAuthChange((user) => {\r\n\t\t\t// user(로그인)가 있다면  goToMAker로 uid 전달\r\n\t\t\tuser && goToMaker(user.uid);\r\n\t\t});\r\n\t});\r\n\r\n\treturn (\r\n\t\t<section className={styles.login}>\r\n\t\t\t<Header />\r\n\t\t\t<section>\r\n\t\t\t\t<h1>Login</h1>\r\n\t\t\t\t<ul className={styles.list}>\r\n\t\t\t\t\t<li className={styles.item}>\r\n\t\t\t\t\t\t<button className={styles.button} onClick={onLogin}>\r\n\t\t\t\t\t\t\tGoogle\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className={styles.item}>\r\n\t\t\t\t\t\t<button className={styles.button} onClick={onLogin}>\r\n\t\t\t\t\t\t\tGithub\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</section>\r\n\t\t\t<Footer />\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport styles from \"./button.module.css\";\r\n\r\nconst Button = ({ name, onClick }) => (\r\n\t<button className={styles.button} onClick={onClick}>\r\n\t\t{name}\r\n\t</button>\r\n);\r\n\r\nexport default Button;\r\n","import React, { useRef, useState } from \"react\";\r\nimport styles from \"./card_add_form.module.css\";\r\nimport Button from \"../button/button\";\r\n// onAdd를 제공한것이 editor.jsx editor는 maker에서 전달받는다\r\nconst CardAddForm = ({ FileInput, onAdd }) => {\r\n\tconst formRef = useRef();\r\n\tconst nameRef = useRef();\r\n\tconst companyRef = useRef();\r\n\tconst themeRef = useRef();\r\n\tconst titleRef = useRef();\r\n\tconst emailRef = useRef();\r\n\tconst messageRef = useRef();\r\n\r\n\t// 파일이 바뀌면(사용자가 업로드) 하면 state로 가지고 있는다 왜냐면 변경해놨다가 add버튼을 누를때만 업데이트 되기떄문\r\n\tconst [file, setFile] = useState({ fileName: null, fileURL: null });\r\n\tconst onFileChange = (file) => {\r\n\t\t// file을 받아와면 setFile로 업데이트 해준다\r\n\t\tsetFile({\r\n\t\t\tfileName: file.name,\r\n\t\t\tfileURL: file.url,\r\n\t\t});\r\n\t};\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault(); //버튼클릭시 페이지가 로딩되는 현상 막기\r\n\t\tconst card = {\r\n\t\t\tid: Date.now(), //uuid\r\n\t\t\tname: nameRef.current.value || \"\",\r\n\t\t\tcompany: companyRef.current.value || \"\",\r\n\t\t\ttheme: themeRef.current.value,\r\n\t\t\ttitle: titleRef.current.value || \"\",\r\n\t\t\temail: emailRef.current.value || \"\",\r\n\t\t\tmessage: messageRef.current.value || \"\",\r\n\t\t\t// image upload\r\n\t\t\tfileName: file.fileName || \"\",\r\n\t\t\tfileURL: file.fileURL || \"\",\r\n\t\t};\r\n\t\tformRef.current.reset(); //사용자가 입력해서 제출하고 나면 폼이 리셋이 나도록\r\n\t\tonAdd(card); //최종적으로 card가 maker에 const addCard = (card)값으로 전달된다\r\n\t\tsetFile({ fileName: null, fileURL: null }); // 사진 업데이트 하고 추가한 다음 add에 이름,url도 초기화되도록\r\n\t};\r\n\treturn (\r\n\t\t<form ref={formRef} className={styles.form}>\r\n\t\t\t<input\r\n\t\t\t\tref={nameRef}\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"name\"\r\n\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tref={companyRef}\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"company\"\r\n\t\t\t\tplaceholder=\"Company\"\r\n\t\t\t/>\r\n\t\t\t<select\r\n\t\t\t\tref={themeRef}\r\n\t\t\t\tclassName={styles.select}\r\n\t\t\t\tname=\"theme\"\r\n\t\t\t\tplaceholder=\"Theme\"\r\n\t\t\t>\r\n\t\t\t\t<option placeholder=\"light\">light</option>\r\n\t\t\t\t<option placeholder=\"dark\">dark</option>\r\n\t\t\t\t<option placeholder=\"colorful\">colorful</option>\r\n\t\t\t</select>\r\n\t\t\t<input\r\n\t\t\t\tref={titleRef}\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"title\"\r\n\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tref={emailRef}\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t/>\r\n\t\t\t<textarea\r\n\t\t\t\tref={messageRef}\r\n\t\t\t\tclassName={styles.textarea}\r\n\t\t\t\tname=\"message\"\r\n\t\t\t\tplaceholder=\"Message\"\r\n\t\t\t></textarea>\r\n\t\t\t{/* 클래스는 스타일 주려면 div안에 넣어줘야한다 */}\r\n\t\t\t<div className={styles.fileInput}>\r\n\t\t\t\t<FileInput onFileChange={onFileChange} name={file.fileName} />\r\n\t\t\t</div>\r\n\t\t\t<Button name=\"Add\" onClick={onSubmit} />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default CardAddForm;\r\n","import React from \"react\";\r\nimport styles from \"./card_edit_form.module.css\";\r\nimport Button from \"../button/button\";\r\n\r\nconst CardEditForm = ({ FileInput, card, updateCard, deleteCard }) => {\r\n\tconst { name, company, title, email, message, theme, fileName } = card; //props으로 maker에 있는 cards 오브젝트를 가져와서 맞는 키값에 할당\r\n\r\n\tconst onFileChange = (file) => {\r\n\t\tupdateCard({\r\n\t\t\t...card,\r\n\t\t\tfileName: file.name,\r\n\t\t\tfileURL: file.url,\r\n\t\t});\r\n\t};\r\n\tconst onChange = (event) => {\r\n\t\tif (event.currentTarget == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tevent.preventDefault();\r\n\t\t// 순서는: 1. 기존의 card값을 복사하고 + 업데이트 되는 내용을 추가 해서 새로운 오브젝트를 먼저 만들고 2. 그리고 updateCard에 인자로 전달해줘요\r\n\t\tupdateCard({\r\n\t\t\t...card, //기존 카드의 키와 벨류는 그대로 쓰면서\r\n\t\t\t// 클릭한 input의 name이 card의 key가 되고, value가 우리의 value가 된다\r\n\t\t\t[event.currentTarget.name]: event.currentTarget.value, // 키는 지금 발생하고 있는 이벤트의 타겟의 이름을 쓰고: value즉 입력되는 값을 쓴다\r\n\t\t\t// Computed property names : updateCard[event.currentTarget.name] = event.currentTarget.value\r\n\t\t}); // 여기가지는 updateCard만 되어있는상태고 화면에 보일려면 card state가 업데이트가 되야한다\r\n\t};\r\n\tconst onSubmit = () => {\r\n\t\tdeleteCard(card);\r\n\t};\r\n\tconsole.log(fileName);\r\n\treturn (\r\n\t\t<form className={styles.form}>\r\n\t\t\t<input\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"name\"\r\n\t\t\t\tvalue={name}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"company\"\r\n\t\t\t\tvalue={company}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t<select\r\n\t\t\t\tclassName={styles.select}\r\n\t\t\t\tname=\"theme\"\r\n\t\t\t\tvalue={theme}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t>\r\n\t\t\t\t<option value=\"light\">Light</option>\r\n\t\t\t\t<option value=\"dark\">Dark</option>\r\n\t\t\t\t<option value=\"colorful\">Colorful</option>\r\n\t\t\t</select>\r\n\t\t\t<input\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"title\"\r\n\t\t\t\tvalue={title}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\tvalue={email}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t<textarea\r\n\t\t\t\tclassName={styles.textarea}\r\n\t\t\t\tname=\"message\"\r\n\t\t\t\tvalue={message}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t></textarea>\r\n\t\t\t{/* 클래스는 스타일 주려면 div안에 넣어줘야한다 */}\r\n\t\t\t<div className={styles.fileInput}>\r\n\t\t\t\t<FileInput name={fileName} onFileChange={onFileChange} />\r\n\t\t\t</div>\r\n\t\t\t<Button name=\"Delete\" onClick={onSubmit} />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default CardEditForm;\r\n","import CardAddForm from \"../card_add_form/card_add_form\";\r\nimport CardEditForm from \"../card_edit_form/card_edit_form\";\r\nimport styles from \"./editor.module.css\";\r\n\r\nconst Editor = ({ FileInput, cards, addCard, updateCard, deleteCard }) => (\r\n\t<section className={styles.editor}>\r\n\t\t<h1 className={styles.title}>Card Maker</h1>\r\n\t\t{/* { {cards.map((card) => (  cards는 더이상 배열이 아닌 오브젝트이기 때문에} */}\r\n\t\t{/* 오브젝트를 맵핑해줄때 쓰는 Object.keys라는 함수를 이용 , cards안에 있는 모든 key를 받아온다 */}\r\n\t\t{Object.keys(cards).map((\r\n\t\t\tkey //key = 1,2,3\r\n\t\t) => (\r\n\t\t\t<CardEditForm\r\n\t\t\t\tkey={key}\r\n\t\t\t\tFileInput={FileInput}\r\n\t\t\t\tcard={cards[key]}\r\n\t\t\t\tupdateCard={updateCard}\r\n\t\t\t\tdeleteCard={deleteCard}\r\n\t\t\t/>\r\n\t\t))}\r\n\t\t<CardAddForm FileInput={FileInput} onAdd={addCard} />\r\n\t</section>\r\n);\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport styles from \"./card.module.css\";\r\n\r\nconst Card = ({ card }) => {\r\n\tconst DEFAULT_IMAGE = process.env.PUBLIC_URL + \"/images/default_logo.png\";\r\n\tconst {\r\n\t\tname,\r\n\t\tcompany,\r\n\t\ttitle,\r\n\t\temail,\r\n\t\tmessage,\r\n\t\ttheme,\r\n\t\tfileName,\r\n\t\tfileURL,\r\n\t} = card;\r\n\tconst url = fileURL || DEFAULT_IMAGE; //fielURL이 있으면 그대로 fileURL을 쓰고 없다면 디폴트\r\n\treturn (\r\n\t\t<li className={`${styles.card} ${getStyles(theme)}`}>\r\n\t\t\t<img className={styles.avatar} src={url} alt=\"profile photo\" />\r\n\t\t\t<div className={styles.info}>\r\n\t\t\t\t<h1 className={styles.name}>{name}</h1>\r\n\t\t\t\t<p className={styles.company}>{company}</p>\r\n\t\t\t\t<p className={styles.title}>{title}</p>\r\n\t\t\t\t<p className={styles.email}>{email}</p>\r\n\t\t\t\t<p className={styles.message}>{message}</p>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nfunction getStyles(theme) {\r\n\tswitch (theme) {\r\n\t\tcase \"dark\":\r\n\t\t\treturn styles.dark;\r\n\t\tcase \"light\":\r\n\t\t\treturn styles.light;\r\n\t\tcase \"colorful\":\r\n\t\t\treturn styles.colorful;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`unknown theme: ${theme}`);\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../card/card\";\r\nimport styles from \"./preview.module.css\";\r\n\r\nconst Preview = ({ cards }) => (\r\n\t<section className={styles.preview}>\r\n\t\t<h1 className={styles.title}>Card Preview</h1>\r\n\t\t<ul className={styles.cards}>\r\n\t\t\t{/* cards를 돌면서 각각의 카드를 해당하는 컴포넌트로 변환 */}\r\n\t\t\t{/* {cards.map((card) => ( */}\r\n\t\t\t{Object.keys(cards).map((key) => (\r\n\t\t\t\t<Card key={key} card={cards[key]} /> //value를 받아온다\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t</section>\r\n);\r\n\r\nexport default Preview;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../footer/footer\";\r\nimport Header from \"../header/header\";\r\nimport Editor from \"../editor/editor\";\r\nimport Preview from \"../preview/preview\";\r\nimport styles from \"./maker.module.css\";\r\n\r\nconst Maker = ({ FileInput, authService, cardRepository }) => {\r\n\tconst history = useHistory();\r\n\tconst historyState = history?.location?.state; //login 에서 history에 저장한 state에 user id를 불러온다\r\n\r\n\tconst [cards, setCards] = useState({\r\n\t\t// key는 카드의 아이디이고 {오브젝트는} 벨류 : 오브젝트 형태로 관리해야 속도측면에서 좋다. 배열이 많아지면 업데이트시 맵핑할때 그만큼 속도가 저하된다.\r\n\t\t// key는 card의 id로 한다 1: {id:\"1\"}\r\n\t});\r\n\t// 리액트 훅으로 state를 다른 변수로 따로 관리할수 있다는 장점\r\n\tconst [userId, setUserId] = useState(historyState && historyState.id); // historyState는 login 컴포넌트에서 오면 값이 있고 다른 컴포넌트에서 오면 값이 없다\r\n\tconst onLogout = () => {\r\n\t\tauthService.logout();\r\n\t};\r\n\r\n\t// 이 useEffect는 사용자가\r\n\tuseEffect(() => {\r\n\t\tif (!userId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst stopSync = cardRepository.syncCards(userId, (cards) => {\r\n\t\t\t//2번째 인자 cards는 prop으로 onUpdate를 호출한다 value = cards 우리 state에 넣어서  업데이트한다\r\n\t\t\tsetCards(cards); // cards(새로운 데이터)를 받아오면 우리의 state를 업데이트 한다\r\n\t\t});\r\n\t\t// 끄고 싶을때 (컴포넌트가 업마운트 되었을때 더이상 보이지 않을때)\r\n\t\treturn () => {\r\n\t\t\tstopSync();\r\n\t\t};\r\n\t}, [userId]); // 이 useEffect는 maker 컴포넌트가 마운트가 되었을때 그리고 사용자의 id가 변경될때마다 쓴다\r\n\r\n\t// 사용자가 변경될때 콜백 (로그인)\r\n\tuseEffect(() => {\r\n\t\tauthService.onAuthChange((user) => {\r\n\t\t\tif (user) {\r\n\t\t\t\tsetUserId(user.uid);\r\n\t\t\t} else {\r\n\t\t\t\thistory.push(\"/cardmaker-react\");\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\t// state가 Obejct로 처리되면서 중복되어 필요없어짐\r\n\t// card_add_form에서가 아니고 maker에서 최종적으로 받기 때문에 여기서 만들어줘야 한다\r\n\t// const addCard = (card) => {\r\n\t// \t// ...cards 기존에 있는 cards를 그대로 복사해오고  추가하는 하나만(card) 더해준다\r\n\t// \tconst updated = [...cards, card];\r\n\t// \t// state API (setCards)로 updated되는거 저장\r\n\t// \tsetCards(updated);\r\n\t// };\r\n\r\n\tconst CreateOrupdateCard = (card) => {\r\n\t\t//card는 card_edit_form에서 updateCard로 입력추가된 업데이트된 값을 props로 가져온다\r\n\t\t//setCards를 이용해야 최신화가 잘된다 . setCards를 부를때의 cards의 상태,이 시점(최신)의 cards의 상태를 복사해온다\r\n\t\tsetCards((cards) => {\r\n\t\t\tconst updated = { ...cards };\r\n\t\t\tupdated[card.id] = card; // updated[card.id] 해당하는 이 키 아이디를 새로업데이트된 card로 변경 해준다\r\n\t\t\t// [card.id]는 1,2,3 중에 하나이고, 만약 1이면 state가 1인 오브젝트가 선택되고 그 오브젝트를 최신화된 card로 변경해준다\r\n\t\t\treturn updated; // maker.js의 state(cards)를 업데이트 해줘야 입력한 값들이 화면에 나오게 된다 (그전에 입력값은 그저 card에 넣어놓은거 뿐)\r\n\t\t});\r\n\r\n\t\t// 카드가 업데이트 되어서 우리 컴포넌트에 우리 카드를 업데이트 한다음에(위에서 처리) 다음 아래에서 데이터 베이스에 업데이트 해준다\r\n\t\tcardRepository.saveCard(userId, card);\r\n\t};\r\n\tconst deleteCard = (card) => {\r\n\t\tsetCards((cards) => {\r\n\t\t\tconst updated = { ...cards };\r\n\t\t\tdelete updated[card.id];\r\n\t\t\treturn updated;\r\n\t\t});\r\n\t\tcardRepository.removeCard(userId, card);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className={styles.maker}>\r\n\t\t\t<Header onLogout={onLogout} />\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t<Editor\r\n\t\t\t\t\tFileInput={FileInput}\r\n\t\t\t\t\tcards={cards}\r\n\t\t\t\t\taddCard={CreateOrupdateCard}\r\n\t\t\t\t\tupdateCard={CreateOrupdateCard}\r\n\t\t\t\t\tdeleteCard={deleteCard}\r\n\t\t\t\t/>\r\n\t\t\t\t<Preview cards={cards} />\r\n\t\t\t</div>\r\n\t\t\t<Footer />\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Maker;\r\n","import React from \"react\";\nimport styles from \"./app.module.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/login/login\";\nimport Maker from \"./components/maker/maker\";\n\nfunction App({ FileInput, authService, cardRepository }) {\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/cardmaker-react\">\n\t\t\t\t\t\t<Login authService={authService} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/maker\">\n\t\t\t\t\t\t<Maker\n\t\t\t\t\t\t\tFileInput={FileInput}\n\t\t\t\t\t\t\tauthService={authService}\n\t\t\t\t\t\t\tcardRepository={cardRepository}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import firebase from \"firebase\";\r\nvar firebaseConfig = {\r\n\tapiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n\tdatabaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\r\n\tprojectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n};\r\n\r\n// Initialize Firebase (먼저 firebase 공홈 Authentication/ sing-in method에서 해당 프로그램 enabled 해줘야 한다)\r\nconst fireBaseApp = firebase.initializeApp(firebaseConfig); // auth_service에 return (동일한 인터페이스)\r\nexport default fireBaseApp;\r\n","import firebase from \"firebase\";\r\nimport firebaseApp from \"./firebase\"; //\r\n\r\n// 사용자가 로그인하거나 로그아웃하는 걸 담당하는 클래스\r\nclass AuthService {\r\n\t//providerName = 구글 인지 트위터인지 무엇인지 받아오기\r\n\t//lgoin에서 클릭시 해당 text를 불러온다\r\n\tlogin(providerName) {\r\n\t\tconst authProvider = new firebase.auth[`${providerName}AuthProvider`](); // 파이어 홈피에서 해당하는 회사의 provider object를 providerName으로 받아온다\r\n\t\t// firebaseApp : 그냥 firebase가 아니라 firabse.js에서 이니셜라이즈된 firebaseApp을 사용해야 한다\r\n\t\treturn firebaseApp.auth().signInWithPopup(authProvider); //공홈에 twitter에서 팝업설명서대로 따온다 (provider) 전달\r\n\t}\r\n\tlogout() {\r\n\t\tfirebase.auth().signOut();\r\n\t}\r\n\r\n\t// 사용자가 바꼈을때 원하는 기능을 수행하는 콜백함수\r\n\t//(onUserChanged)는 login.jsx에서 함수자체로 전달받는다\r\n\tonAuthChange(onUserChanged) {\r\n\t\t//(user) 사용자가 바뀔때마다 전달받는 사용자 정보\r\n\t\tfirebase.auth().onAuthStateChanged((user) => {\r\n\t\t\t//사용자가 바뀔떄마다 전달받은 사용자 정보를 함수에 전달 호출\r\n\t\t\tonUserChanged(user);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default AuthService;\r\n","// 컴포넌트 디펜던시 인젝션 10.17\r\n// 컴포넌트 디펜던시 인젝션은 props의 갯수가 많다고 무작정 쓰기 보다는,\r\n// A컴포넌트 안에서 B컴포넌트를 만드는데 B컴포넌트를 만들기 위한 props의 갯수가 많다면 그리고 그 props들이 A에서 쓰이지 않는다면 (그러니깐 단순히 B를 만들기 위해서 A에 모든것을 전달하기 보다는 -> 한 클래스 안에서 다른 클래스를 직접 만든다면, 이건 DI 원칙에서 어긋나겠죠?)\r\n// 그럴때 B를 외부에서 만들고 단순히 B를 A에 전달해 주면 되어요.\r\n// 그럼 이미 만들어진 B를 다른 컴포넌트에서 필요하다면 또 단순히 B만 전달해 주면 되겠죠?\r\nclass ImageUploader {\r\n\t// 서버에 이미지를 업로드하고 업로드를 완료하면 그 결과값(서버의 해당 url)을 리턴하니깐  async promise를 사용한다\r\n\tasync upload(file) {\r\n\t\tconst data = new FormData();\r\n\t\tdata.append(\"file\", file);\r\n\t\tdata.append(\"upload_preset\", \"docs_upload_example_us_preset\");\r\n\t\tconst result = await fetch(\r\n\t\t\t\"https://api.cloudinary.com/v1_1/demo/image/upload\",\r\n\t\t\t{\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: data,\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn await result.json();\r\n\t}\r\n}\r\n\r\nexport default ImageUploader;\r\n","import React, { useRef, useState } from \"react\";\r\nimport styles from \"./image_file_input.module.css\";\r\n\r\nconst ImageFileInput = ({ imageUploader, name, onFileChange }) => {\r\n\tconst [loading, setLoading] = useState(false); //기본값은 당연히 loading되고 있지 않으니깐 false\r\n\tconst inputRef = useRef();\r\n\tconst onButtonClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tinputRef.current.click();\r\n\t};\r\n\r\n\t// const onChange = (event) => {\r\n\t// \timageUploader.upload(event.target.files[0]).then(console.log);\r\n\t// }; 이거말고 아래에 async로 비동기적으로 처리할수 있다\r\n\tconst onChange = async (event) => {\r\n\t\tsetLoading(true);\r\n\t\tconst uploaded = await imageUploader.upload(event.target.files[0]);\r\n\t\tsetLoading(false); //로딩이 끝나고 다시 기본값으로\r\n\t\t// onFileChange prop으로 전달된 콜백함수에 아래 정보들을 전달한다\r\n\t\tonFileChange({\r\n\t\t\tname: uploaded.original_filename,\r\n\t\t\turl: uploaded.url,\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<input\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"file\"\r\n\t\t\t\taccept=\"image/*\"\r\n\t\t\t\tname=\"file\"\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t{/* 로딩이 아닐때 (초기화면)button을 클릭시 input이 발동되도록 해야한다 */}\r\n\t\t\t{!loading && (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={`${styles.button} ${name ? styles.pink : styles.grey}`}\r\n\t\t\t\t\tonClick={onButtonClick}\r\n\t\t\t\t>\r\n\t\t\t\t\t{name || \"No file\"}\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t{loading && <div className={styles.loading}></div>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageFileInput;\r\n","import fireBaseApp from \"./firebase\";\r\nclass CardRepository {\r\n\tsyncCards(userId, onUpdate) {\r\n\t\t//firebase에서 해당 경로의 데이터가 계속 업데이트 될때마다 ,snapshot의 value설정이 되어있다면 onUpdate계속 호출한다\r\n\t\tconst ref = fireBaseApp.database().ref(`${userId}/cards`);\r\n\t\t//firebase Listen for value events 페이지에서 참고\r\n\t\t// value - 값이 변경될때 마다 알고싶다\r\n\t\tref.on(\"value\", (snapshot) => {\r\n\t\t\tconst value = snapshot.val();\r\n\t\t\tvalue && onUpdate(value); //value가 있다면 onUpdate함수를 호출한다\r\n\t\t});\r\n\r\n\t\treturn () => ref.off(); //stopSync\r\n\t}\r\n\t//maker에서 id,최신화된 card를 받아온다\r\n\tsaveCard(userId, card) {\r\n\t\tfireBaseApp.database().ref(`${userId}/cards/${card.id}`).set(card); //firebase /console/ Realtiem Database에 경로를 따라 저장해준다\r\n\t}\r\n\tremoveCard(userId, card) {\r\n\t\tfireBaseApp.database().ref(`${userId}/cards/${card.id}`).remove();\r\n\t}\r\n}\r\n\r\nexport default CardRepository;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\nimport App from \"./app\";\nimport AuthService from \"./service/auth_service\";\nimport ImageUploader from \"./service/image_uploader\";\nimport ImageFileInput from \"./components/image_file_input/image_file_input\";\n// import reportWebVitals from './reportWebVitals';\nimport CardRepository from \"./service/card_repository\";\n\nconst authService = new AuthService();\n// 최상위 전달자 index라서 여기서 이미지를 전달한다\nconst imageUploader = new ImageUploader();\n// FileInput\n// 여기서 변수로 component 자체를 만들어 다른 컴포넌트로 전달 (여기서는 필요한 곳이 card_add_form and card_edit_form 으로 전달해줬다)\n// 만든 componenet에서 서비스를 추가하거나  할때 여기에서만 변경해주면 다른 전달하는곳에는 수정할 필요가 없어 심플하다\n// component prop은 대문자로 전달\n// ImageFileInput props으로 전달해주는 이유 : ImageFileInput에 onclick이라던지 다양한 props을 전달할수 있다.\n// 사용자가 FileInput을 사용할때 원하는 proprs를 전달해서 ImageFileInput {...props} 전달해주기 때문에 확장성이 좋다\n// imageUploader={imageUploader}는 고정이고 prop은 injection해놓는다 .\n// component prop은 대문자로 시작\nconst FileInput = (props) => (\n\t<ImageFileInput {...props} imageUploader={imageUploader} />\n);\n\nconst cardRepository = new CardRepository();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App\n\t\t\tauthService={authService}\n\t\t\tFileInput={FileInput}\n\t\t\tcardRepository={cardRepository}\n\t\t/>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}